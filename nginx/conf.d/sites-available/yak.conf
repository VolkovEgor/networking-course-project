server {
  listen 80;
  server_name _;
  add_header Server YakServer always;

  location / {
    set $do_not_cache 0;
    if ($http_cookie ~* ".+" ) {
      set $do_not_cache 1;
    }
    proxy_cache_bypass $do_not_cache;
    proxy_pass http://127.0.0.1:81/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_cache all;
    proxy_cache_methods GET HEAD;
    proxy_cache_valid 404 502 503 1m;
    proxy_cache_valid any 1m;
  }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name _;
  include conf.d/snippets/ssl_certs.conf;
  add_header Server YakServer always;

  location / {
    set $do_not_cache 0;
    if ($http_cookie ~* ".+" ) {
      set $do_not_cache 1;
    }
    proxy_cache_bypass $do_not_cache;
    proxy_pass http://127.0.0.1:81/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_cache all;
    proxy_cache_methods GET HEAD;
    proxy_cache_valid 404 502 503 1m;
    proxy_cache_valid any 1m;
  }
}

upstream backend_balanced {
  server fiber_main:8001 weight=2;
  server fiber_ro1:8001 weight=1;
  server fiber_ro2:8001 weight=1;
}

upstream backend_main {
  server fiber_main:8001;
}

map $request_method $backend {
  default backend_main;
  GET backend_balanced;
  HEAD backend_balanced;
}


server {
  listen 81;

  location / {
    proxy_pass http://svelte:5000;
  }

  location /test {
    proxy_pass http://svelte:5000;
  }

  location /admin {
    proxy_set_header X-Script-Name /admin;
    proxy_set_header X-Scheme $scheme;
    proxy_set_header Host $host;
    proxy_pass http://pgadmin4;
    proxy_redirect off;
  }

  location /swagger {
    root /usr/share/nginx/html;
    index index.html;
  }

  location /api {
    root /usr/share/nginx/html;
    rewrite ^/api/v\d(/.*\.(?:html|js|css)|/)?$ /swagger$1;
    try_files $uri $uri/index.html @api;
  }

  location @api {
    proxy_pass http://$backend$uri;
  }

  location /status {
    stub_status;
  }
}
